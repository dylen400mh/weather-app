(()=>{"use strict";const t=(()=>{const t=document.querySelector("input"),e=document.getElementById("location"),n=document.getElementById("temperature"),o=document.getElementById("condition"),i=document.getElementById("feels-like"),c=document.getElementById("humidity"),r=document.getElementById("wind"),a=document.getElementById("wind-direction"),d=document.getElementById("precipitation"),m=document.getElementById("last-updated");return{resetInput:function(){t.value=""},updateDisplay:function(t,u){const l=t.current,{location:p}=t;console.log(e),console.log(`${p.name}, ${p.region}, ${p.country}`),e.textContent=`${p.name}, ${p.region}, ${p.country}`,o.textContent=l.condition.text,c.textContent=`Humidity: ${l.humidity}`,a.textContent=`Wind Direction: ${l.wind_dir}`,m.textContent=`Last Updated: ${l.last_updated}`,"metric"===u&&(n.textContent=`${l.temp_c} 째C`,r.textContent=`Wind: ${l.wind_kph} kph`,i.textContent=`Feels Like: ${l.feelslike_c} 째C`,d.textContent=`Precipitation: ${l.precip_mm} mm`),"imperial"===u&&(n.textContent=`${l.temp_f} 째F`,r.textContent=`Wind: ${l.wind_mph} mph`,i.textContent=`Feels Like: ${l.feelslike_f} 째F`,d.textContent=`Precipitation: ${l.precip_in} in`)}}})();(()=>{async function e(t){try{const e=await fetch(`https://api.weatherapi.com/v1/current.json?key=fda6ad22a48445cabbe213714230208&q=${t}`,{mode:"cors"}),n=await e.json();return console.log(n),n}catch(t){throw console.error("Error fetching weather data:",t),t}}return document.querySelector("form").addEventListener("submit",(n=>{n.preventDefault();const o=n.target.querySelector("input").value;o&&e(o).then((e=>{t.updateDisplay(e,"metric"),t.resetInput()}))})),{getWeatherData:e}})().getWeatherData("st. thomas ontario").then((e=>{t.updateDisplay(e,"metric")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,